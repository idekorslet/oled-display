#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED oled width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
#define OLED_RESET 4 // Reset pin # (or -1 if sharing Arduino reset pin)

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define LOGO_HEIGHT   25
#define LOGO_WIDTH    26

const unsigned char like1 [] PROGMEM = {
  0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x1e, 0x00, 
  0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x08, 0x03, 0xf8, 0x00, 0x1e, 0x07, 0xf0, 0x00, 
  0x1f, 0x0f, 0xe0, 0x00, 0x1f, 0x1f, 0xe0, 0x00, 0x3f, 0x7f, 0xf0, 0x00, 0x3e, 0x7f, 0xfc, 0x00, 
  0x3e, 0x7f, 0xff, 0x00, 0x7e, 0xff, 0xff, 0x80, 0x7c, 0xff, 0xff, 0x80, 0xfd, 0xff, 0xff, 0x80, 
  0xfd, 0xff, 0xff, 0x00, 0x79, 0xff, 0xff, 0x00, 0x1b, 0xff, 0xff, 0x00, 0x03, 0xff, 0xfe, 0x00, 
  0x00, 0xff, 0xfc, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x1f, 0xf0, 0x00, 
  0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0xe0, 0x00
};

const unsigned char like2 [] PROGMEM = {
  0x00, 0x01, 0x80, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x01, 0xc0, 0x00, 
  0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x0f, 0x80, 0x00, 
  0x00, 0x1f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x3f, 0xff, 0x80, 
  0x00, 0x7f, 0xff, 0x80, 0x78, 0xff, 0xff, 0x80, 0xfd, 0xff, 0xff, 0x00, 0xfd, 0xff, 0xff, 0x80, 
  0xfd, 0xff, 0xff, 0x80, 0xfd, 0xff, 0xff, 0x80, 0xfd, 0xff, 0xff, 0x00, 0xfd, 0xff, 0xff, 0x00, 
  0xfd, 0xff, 0xff, 0x00, 0xfd, 0xff, 0xff, 0x00, 0xfd, 0xff, 0xfe, 0x00, 0xfd, 0xff, 0xfe, 0x00, 
  0xfc, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xf0, 0x00
};

const unsigned char like3 [] PROGMEM = {
  0x00, 0x60, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 
  0x00, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x78, 0x18, 0x00, 0x00, 0x78, 0xfc, 0x00, 
  0x00, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0x80, 0x39, 0xff, 0xff, 0x00, 
  0xfd, 0xff, 0xff, 0x00, 0xfc, 0xff, 0xff, 0x80, 0x7e, 0xff, 0xff, 0x00, 0x7e, 0x7f, 0xfe, 0x00, 
  0x7e, 0x7f, 0xf8, 0x00, 0x3f, 0x3f, 0xe0, 0x00, 0x3f, 0x3c, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 
  0x1f, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00
};

char title[12];  // maksimal 12 karakter
char text[100];  // maksimal 100 karakter

String text_string, title_string;

int text_length, title_length;
int column_pos, title_pos;
int text_width, title_width;

void setup() {
    title_string = "title";
    title_length = title_string.length();
    title_width = title_length * 11;

    if (title_width > SCREEN_WIDTH) 
        title_pos = (title_width - SCREEN_WIDTH) / 2; 
    else 
        title_pos = (SCREEN_WIDTH -  title_width) / 2;
    
    text_string = "TES TEKS BERJALAN CUUUY...";
    text_length = text_string.length();
    text_width = text_length * 11;
    
    // convert string variable value to char
    strcpy(title, title_string.c_str());      // variable title = title_string
    strcpy(text, text_string.c_str());        // text value = text_string value

    column_pos = display.width();  
  
    if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
        Serial.println(F("SSD1306 allocation failed"));
        for(;;); // Don't proceed, loop forever
    }
  
    display.clearDisplay();  // Clear the buffer
    display.setTextSize(2);
    display.setTextColor(WHITE);
    display.cp437(true);    // Use full 256 char 'Code Page 437' font  
    display.setTextWrap(false);     
}

void loop() {
   
    column_pos = column_pos - 2.5; // scroll speed    
    
    // jika mendapat error ketika memanggil function / method printMessage
    // coba konversi dulu variabel yang ingin ditampilkan, misal dari variabel integer ke char
    // sprintf(nama_variabel_char, "%d", nama_variabel_integer); --> convert nama_variabel_integer (integer type) to nama_variabel_char (char type)
    printMessage(true, title_pos, 0, title, false);
    printMessage(false, column_pos, 18, text, true);
        
    if (column_pos < (0 - text_width)) {    
        column_pos = display.width();
        testDrawBitmap();
    }   
}

void printMessage(bool clear_display, int col, int row, char message[], bool visible){
    if (clear_display) display.clearDisplay();

    display.setCursor(col, row);    
    display.print(message);

    if (visible) display.display();  
}

void testDrawBitmap(void) {  
    for (int x = 1;  x <= 4; x++) {
        display.clearDisplay();      
       
        switch (x) {
            case 1:
              display.drawBitmap(20, 0, like1, LOGO_WIDTH, LOGO_HEIGHT, WHITE);  
              break;
            case 2:
              display.drawBitmap(20, 0, like2, LOGO_WIDTH, LOGO_HEIGHT, WHITE);  
              break;
            case 3:
              display.drawBitmap(20, 0, like3, LOGO_WIDTH, LOGO_HEIGHT, WHITE);  
              break;
            case 4:
              display.drawBitmap(20, 0, like2, LOGO_WIDTH, LOGO_HEIGHT, WHITE);  
              break;        
        }
        
        printMessage(false, 60, 8, "LIKE", true);
            
        // jika x >= 4 maka delay selama 2 detik, selain itu delay selama 100ms           
        if (x >= 4 ) delay(2000); else delay(100);      
    }
}

// referensi:
//https://diyprojects.io/using-i2c-128x64-0-96-ssd1306-oled-display-arduino/#.YD8EV298pdj
//https://www.youtube.com/watch?v=sTYPuDMPva8
